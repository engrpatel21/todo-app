{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/authService.js","pages/Login/Login.jsx","components/SignupForm/SignupForm.jsx","pages/Signup/Signup.jsx","pages/Landing/Landing.jsx","pages/AddMovie/AddMovie.jsx","services/movies-api.js","pages/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogout","className","href","src","height","alt","border","id","name","onClick","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","console","log","json","Error","err","tokenService","getUser","logout","login","creds","ok","Login","state","email","pw","handleChange","e","setState","target","value","handleSubmit","a","preventDefault","authService","props","handleSignupOrLogin","history","push","alert","autoComplete","onSubmit","this","type","onChange","htmlFor","to","Component","SignupForm","password","passwordConf","updateMessage","message","disabled","isFormInvalid","Signup","msg","Landing","AddMovie","invalidForm","formData","cast","description","mpaaRating","releaseDate","runTime","genre","imdbRating","image","handleAddMovie","formRef","current","checkValidity","React","createRef","ref","required","create","movie","mode","App","movies","tvshows","newMovieData","movieAPI","newMovie","addedBy","_id","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.eff9412d.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = ({ user, handleLogout }) => {\n  return(\n    <>\n      {user ?\n      <nav>\n        <div className=\"nav-wrapper\">\n          <a className=\" left\" href=\"/\"><img src=\"https://fontmeme.com/permalink/200705/e2371cf438042048aa22fb9341eadbba.png\" height='66' alt=\"netflix-font\" border=\"0\"/></a>\n          <ul id=\"nav-mobile\" className=\"right\">\n            <li><a href=\" \" className=\"nav-link\">Welcome, {user.name}</a></li>\n            <li><a className=\"nav-link-a\" href=\"/movies\">All Movies</a></li>\n            <li><a href=\"/movies\"><i className=\"material-icons left small\">movie</i></a></li>\n            <li><a className=\"nav-link-b\" href=\"/movies/add\">Add a Movie</a></li>\n            <li><a href=\"/movies/add\"><i className=\"material-icons left small\">add movie</i></a></li>\n            <li><a className=\"nav-link-a\" href=\"/tvshows\">All TV Shows</a></li>\n            <li><a href=\"/tvshows\"><i className=\"material-icons left small\">tv</i></a></li>\n            <li><a className=\"nav-link-b\" href=\"/tvshows/add\">Add a TV Show</a></li>\n            <li><a href=\"/tvshows/add\"><i className=\"material-icons left small\">add tv</i></a></li>\n            <li><a href=\" \" className=\"nav-link\" onClick={handleLogout}>Log Out</a></li>\n          </ul>\n        </div>\n      </nav>\n    :\n      <nav>\n        <div className=\"nav-wrapper\">\n          <a className=\" left\" href=\"/\"><img src=\"https://fontmeme.com/permalink/200705/e2371cf438042048aa22fb9341eadbba.png\" height='66' alt=\"netflix-font\" border=\"0\"/></a>\n          <ul id=\"nav-mobile\" className=\"right\">\n            <li><a className=\"nav-link\" href=\"/movies\">All Movies</a></li>\n            <li><a href=\"/movies\"><i className=\"material-icons left small\">movie</i></a></li>\n            <li><a className=\"nav-link\" href=\"/tvshows\">All TV Shows</a></li>\n            <li><a href=\"/tvshows\"><i className=\"material-icons left small\">tv</i></a></li>\n            <li><a href=\"/login\" className=\"nav-link\">Log In</a></li>\n            <li><a href=\"/signup\" className=\"nav-link\">Sign Up</a></li>\n          </ul>\n        </div>\n      </nav>\n      }\n    </>\n  )\n}\n\nexport default NavBar;","function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    } \n  }\n  \nfunction getUserFromToken () {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction removeToken() {\n    localStorage.removeItem('token');\n}\n\nexport default {\n    setToken,\n    getToken,\n    getUserFromToken,\n    removeToken,\n  };","import tokenService from './tokenService';\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport authService from '../../services/authService';\n\nclass Login extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await authService.login(this.state);\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <h3>Log In</h3>\n        <form className=\"col s12\" autoComplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autoComplete=\"off\" id=\"email\" className=\"active\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autoComplete=\"off\" className=\"active\" id=\"password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <button className=\"btn green\">Log In<i className=\"material-icons right\">arrow_forward</i></button>&nbsp;&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i className=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport authService from '../../services/authService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await authService.signup(this.state);\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign Up</h3>\n        <form className=\"col s12\" autoComplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autoComplete=\"off\" className=\"active\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n              <label htmlFor=\"name\">Name</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autoComplete=\"off\" className=\"active\" id=\"email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autoComplete=\"off\" className=\"active\" id=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autoComplete=\"off\" className=\"active\" id=\"confirm\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n              <label htmlFor=\"confirm\">Confirm Password</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn green\" disabled={this.isFormInvalid()}>Sign Up<i className=\"material-icons right\">person_add</i></button>&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i className=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './Signup.css';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='Signup'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;","import React from 'react';\nimport './Landing.css'\n\nfunction Landing () {\n    return(\n        <>\n            <div className=\"background\"></div>\n        </>\n    )\n}\n\n\nexport default Landing;","import React, { Component } from 'react'\nimport './AddMovie.css';\n\nclass AddMovie extends Component {\n    state = { \n        invalidForm: true,\n        formData: {\n            name: '',\n            cast: [],\n            description: '',\n            mpaaRating: '',\n            releaseDate: '',\n            runTime: '',\n            genre: '',\n            imdbRating: '',\n            image: '',\n        }\n     }\n\n     handleSubmit = e =>{\n         e.preventDefault();\n         this.props.handleAddMovie(this.state.formData)\n     }\n\n     handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n        formData,\n        invalidForm: !this.formRef.current.checkValidity()\n        });\n     }\n\n    formRef = React.createRef()\n    render() { \n        return ( \n            <>\n                <div className=\"AddMovie\">\n                    <form className=\"col s12\" ref={this.formRef} onSubmit={this.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"name\" id=\"movie_name\" type=\"text\" className=\"active\" value={this.state.formData.name} onChange={this.handleChange} required />\n                            <label htmlFor=\"movie_name\">Movie Name</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"cast\" id=\"cast\" type=\"text\" className=\"active\" value={this.state.formData.cast} onChange={this.handleChange} required/>\n                            <label htmlFor=\"cast\">Cast (Separate with commas)</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"description\" id=\"description\" type=\"text\" className=\"active\" value={this.state.formData.description} onChange={this.handleChange}/>\n                            <label htmlFor=\"description\">Description</label>\n                            </div>\n                        </div>\n                        <div><label>MPAA Rating</label>\n                            <p>\n                                <label>  \n                                    <input className=\"with-gap\" name=\"mpaaRating\" value=\"G\" onChange={this.handleChange} type=\"radio\"/>\n                                    <span>G</span>\n                                </label>\n                            </p>\n                            <p>\n                                <label>  \n                                    <input className=\"with-gap\" name=\"mpaaRating\" value=\"PG\" onChange={this.handleChange} type=\"radio\"/>\n                                    <span>PG</span>\n                                </label>\n                            </p>\n                            <p>\n                                <label>  \n                                    <input className=\"with-gap\" name=\"mpaaRating\" value=\"PG-13\" onChange={this.handleChange} type=\"radio\"/>\n                                    <span>PG-13</span>\n                                </label>\n                            </p>\n                            <p>\n                                <label>  \n                                    <input className=\"with-gap\" name=\"mpaaRating\" value=\"R\" onChange={this.handleChange} type=\"radio\"/>\n                                    <span>R</span>\n                                </label>\n                            </p>\n                            <p>\n                                <label>  \n                                    <input className=\"with-gap\" name=\"mpaaRating\" value=\"NC-17\" onChange={this.handleChange} type=\"radio\"/>\n                                    <span>NC-17</span>\n                                </label>\n                            </p>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"releaseDate\" id=\"release\" type=\"text\" className=\"active\" value={this.state.formData.releaseDate} onChange={this.handleChange}/>\n                            <label htmlFor=\"release\">Release Year</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"runTime\" id=\"runtime\" type=\"text\" className=\"active\" value={this.state.formData.runTime} onChange={this.handleChange}/>\n                            <label htmlFor=\"runtime\">Run-time (Min)</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"genre\" id=\"genre\" type=\"text\" className=\"active\" value={this.state.formData.genre} onChange={this.handleChange}/>\n                            <label htmlFor=\"genre\">Genre</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"imdbRating\" id=\"imdb\" type=\"text\" className=\"active\" value={this.state.formData.imdbRating} onChange={this.handleChange}/>\n                            <label htmlFor=\"imdb\">IMDB Rating</label>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input name=\"image\" id=\"imageURL\" type=\"text\" className=\"active\" value={this.state.formData.image} onChange={this.handleChange}/>\n                            <label htmlFor=\"imageURL\">Image URL</label>\n                            </div>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn red\"\n                            disabled={this.state.invalidForm}\n                        ><i className=\"material-icons left\">add</i>\n                            Add Movie\n                        </button>                           \n                    </form>\n                </div>\n            </>\n         );\n    }\n}\n \nexport default AddMovie;","import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/movies/';\n\nexport function create(movie) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(movie)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, {mode: \"cors\"})\n    .then(res => res.json())\n  }","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport './App.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Login from '../Login/Login';\nimport Signup from '../Signup/Signup';\nimport authService from '../../services/authService';\nimport Landing from '../Landing/Landing'\nimport AddMovie from '../AddMovie/AddMovie'\nimport * as movieAPI from '../../services/movies-api'\n\nclass App extends Component {\n  state = {\n    movies: [],\n    tvshows: [],\n    user: authService.getUser()\n  }\n\n  handleLogout = () => {\n    authService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: authService.getUser()});\n  }\n\n  handleAddMovie = async newMovieData => {\n    const newMovie = await movieAPI.create(newMovieData);\n    newMovie.addedBy = {name: this.state.user.name, _id: this.state.user._id}\n    this.setState(state => ({\n      movies: [...state.movies, newMovie]\n    }), () => this.props.history.push('/movies'));\n  }\n\n  async componentDidMount() {\n    const movies = await movieAPI.getAll();\n    this.setState({movies})\n  }\n\n  render () {\n    return (\n      <>\n        <NavBar \n          user={this.state.user}\n          handleLogout={this.handleLogout}\n        />\n        <Route exact path='/' render={() =>\n          <Landing />\n        }/>\n        <Route exact path='/signup' render={({ history }) => \n          <Signup\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n        <Route exact path='/login' render={({ history }) => \n          <Login\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n\n        <Route \n          exact path='/movies/add'\n          render={() =>\n            authService.getUser() ?\n            <AddMovie \n            handleAddMovie = {this.handleAddMovie}\n            user={this.state.user}\n            />\n          :\n          <Redirect to='/login' />\n          }/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({history}) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}